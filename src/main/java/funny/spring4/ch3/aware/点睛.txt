    spring的依赖注入的最大亮点就是你所有的Bean对Spring容器的存在是没有意识的。
即你可以将你的容器替换成别的容器，如Google Guice,这时Bean之间的耦合度很低。
    但是在实际项目中，你不可避免的要用到spring容器本身的功能资源，这时你的Bean必须意识到Spring容器的存在，才能调用spring所提供的资源，
这就是所谓的Spring Aware。其实spring aware本来就是spring涉及用来框架内部使用的，若使用了spring aware，你的bean将会和spring框架耦合。
    Spring提供的Aware接口：
    BeanNameAware                   获得容器中Bean的名称
    BeanFactoryAware                获得当前bean factory，这样可以调用容器的服务
    ApplicationContextAware*        当前的application context ，这样可以调用容器的服务
    MessageSourceAware              获得message source ，这样可以获得文本信息
    ApplicationEventPublisherAware  应用时间发布器，可以发布事件，2.5节的demoPublisher也可以实现这个接口来发布事件
    ResourceLoaderAware             获得资源加载器，可以获得外部资源文件
Spring Aware的目的是为了让Bean获得Spring容器的服务，因为ApplicationContext 接口集成了MessageSource接口、
ApplicationEventPublisher接口和ResourceLoader接口，所以Bean继承ApplicationContextAware可以获得Spring容器的所有服务，
但原则上我们还是用到什么接口，就试下什么接口